# -*- coding: utf-8 -*-
"""symmetric_eigen.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F_v7tWyse92EioD2t3GPvMlb0FfkVqU9
"""

import numpy as np

# generating symmetric invertible matrix
def generate_invertible_symmetric_matrix(n):
  rand_matrix= np.random.randint(1, 50, size=(n, n))
  sym_matrix= rand_matrix+ rand_matrix.T

  while np.linalg.det(sym_matrix) == 0:
    rand_matrix= np.random.randint(1, 50, size=(n, n))
    sym_matrix= rand_matrix+ rand_matrix.T

  return sym_matrix

def eigen_decomposition_and_reconstruction(A):
    eigenvalues, eigenvectors = np.linalg.eig(A)

    # Reconstruction of A from eigenvalues and eigenvectors
    A_recon = np.dot(np.dot(eigenvectors, np.diag(eigenvalues)), eigenvectors.T) #from section 2.7 A= V diag(lambda) Transpose(V)

    return A_recon

n = int(input("Enter the dimension of the matrix (n): "))

A= generate_invertible_symmetric_matrix(n)

print(A)

A_recon = eigen_decomposition_and_reconstruction(A)

# print(A_recon)

#Check if properly reconstructed
if np.allclose(A, A_recon):
    print("Reconstruction successful.")
else:
    print("Reconstruction failed.")

